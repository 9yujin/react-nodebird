{"ast":null,"code":"import { applyMiddleware, createStore, compose } from 'redux';\nimport { createWrapper } from 'next-redux-wrapper';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport reducer from '../reducers';\n\nvar configureStore = function configureStore(context) {\n  console.log(context);\n  var middlewares = [];\n  var enhancer = false //개발용인지 아닌지\n  ? compose(applyMiddleware.apply(void 0, middlewares)) //배포용일때\n  : composeWithDevTools( //개발용일때,, devtool을 넣음. 이런건 nextjs 쓸때만 하는건가??\n  applyMiddleware.apply(void 0, middlewares));\n  var store = createStore(reducer, enhancer); //스토어ㄹ 가와\n\n  return store;\n};\n\nvar wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"sources":["/Users/hangyujin/Desktop/JBBP/tutorial/getnodebird/front/store/configureStore.js"],"names":["applyMiddleware","createStore","compose","createWrapper","composeWithDevTools","reducer","configureStore","context","console","log","middlewares","enhancer","store","wrapper","debug"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,WAA1B,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,OAAOC,OAAP,MAAoB,aAApB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,OAAD,EAAa;AAClCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA,MAAMG,WAAW,GAAG,EAApB;AACA,MAAMC,QAAQ,GAAG,MAAsC;AAAtC,IACbT,OAAO,CAACF,eAAe,MAAf,SAAmBU,WAAnB,CAAD,CADM,CAC6B;AAD7B,IAEbN,mBAAmB,EAAuB;AAC1CJ,EAAAA,eAAe,MAAf,SAAmBU,WAAnB,CADmB,CAFvB;AAKA,MAAME,KAAK,GAAGX,WAAW,CAACI,OAAD,EAAUM,QAAV,CAAzB,CARkC,CAQY;;AAC9C,SAAOC,KAAP;AACD,CAVD;;AAYA,IAAMC,OAAO,GAAGV,aAAa,CAACG,cAAD,EAAiB;AAAEQ,EAAAA,KAAK;AAAP,CAAjB,CAA7B;AAEA,eAAeD,OAAf","sourcesContent":["import { applyMiddleware, createStore, compose } from 'redux';\nimport { createWrapper } from 'next-redux-wrapper';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport reducer from '../reducers';\n\nconst configureStore = (context) => {\n  console.log(context);\n  const middlewares = [];\n  const enhancer = process.env.NODE_ENV === 'production' //개발용인지 아닌지\n    ? compose(applyMiddleware(...middlewares))  //배포용일때\n    : composeWithDevTools(                      //개발용일때,, devtool을 넣음. 이런건 nextjs 쓸때만 하는건가??\n      applyMiddleware(...middlewares),\n    );\n  const store = createStore(reducer, enhancer); //스토어ㄹ 가와\n  return store;\n};\n\nconst wrapper = createWrapper(configureStore, { debug: process.env.NODE_ENV === 'development' });\n\nexport default wrapper;\n"]},"metadata":{},"sourceType":"module"}