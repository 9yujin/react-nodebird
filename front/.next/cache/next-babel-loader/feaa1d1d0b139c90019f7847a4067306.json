{"ast":null,"code":"import { applyMiddleware, createStore, compose } from \"redux\";\nimport { createWrapper } from \"next-redux-wrapper\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport createSagaMiddleware from \"@redux-saga/core\";\nimport reducer from \"../reducers\";\nimport rootSaga from \"../sagas/\";\n\nconst configureStore = context => {\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewares = [sagaMiddleware, loggerMiddleware];\n  const enhancer = false //개발용인지 아닌지\n  ? compose(applyMiddleware(...middlewares)) //배포용일때\n  : composeWithDevTools( //개발용일때,, devtool을 넣음. 이런건 nextjs 쓸때만 하는건가??\n  applyMiddleware(...middlewares));\n  const store = createStore(reducer, enhancer); //스토어ㄹ 가와\n\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"sources":["/Users/hangyujin/Desktop/JBBP/tutorial/getnodebird/front/store/configureStore.js"],"names":["applyMiddleware","createStore","compose","createWrapper","composeWithDevTools","createSagaMiddleware","reducer","rootSaga","configureStore","context","sagaMiddleware","middlewares","loggerMiddleware","enhancer","store","sagaTask","run","wrapper","debug"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,WAA1B,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,oBAAP,MAAiC,kBAAjC;AACA,OAAOC,OAAP,MAAoB,aAApB;AACA,OAAOC,QAAP,MAAqB,WAArB;;AACA,MAAMC,cAAc,GAAIC,OAAD,IAAa;AAClC,QAAMC,cAAc,GAAGL,oBAAoB,EAA3C;AACA,QAAMM,WAAW,GAAG,CAACD,cAAD,EAAiBE,gBAAjB,CAApB;AACA,QAAMC,QAAQ,GACZ,MAAsC;AAAtC,IACIX,OAAO,CAACF,eAAe,CAAC,GAAGW,WAAJ,CAAhB,CADX,CAC6C;AAD7C,IAEIP,mBAAmB,EACjB;AACAJ,EAAAA,eAAe,CAAC,GAAGW,WAAJ,CAFE,CAHzB;AAOA,QAAMG,KAAK,GAAGb,WAAW,CAACK,OAAD,EAAUO,QAAV,CAAzB,CAVkC,CAUY;;AAC9CC,EAAAA,KAAK,CAACC,QAAN,GAAiBL,cAAc,CAACM,GAAf,CAAmBT,QAAnB,CAAjB;AACA,SAAOO,KAAP;AACD,CAbD;;AAeA,MAAMG,OAAO,GAAGd,aAAa,CAACK,cAAD,EAAiB;AAAEU,EAAAA,KAAK;AAAP,CAAjB,CAA7B;AAEA,eAAeD,OAAf","sourcesContent":["import { applyMiddleware, createStore, compose } from \"redux\";\nimport { createWrapper } from \"next-redux-wrapper\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport createSagaMiddleware from \"@redux-saga/core\";\nimport reducer from \"../reducers\";\nimport rootSaga from \"../sagas/\";\nconst configureStore = (context) => {\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewares = [sagaMiddleware, loggerMiddleware];\n  const enhancer =\n    process.env.NODE_ENV === \"production\" //개발용인지 아닌지\n      ? compose(applyMiddleware(...middlewares)) //배포용일때\n      : composeWithDevTools(\n          //개발용일때,, devtool을 넣음. 이런건 nextjs 쓸때만 하는건가??\n          applyMiddleware(...middlewares)\n        );\n  const store = createStore(reducer, enhancer); //스토어ㄹ 가와\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nconst wrapper = createWrapper(configureStore, { debug: process.env.NODE_ENV === \"development\" });\n\nexport default wrapper;\n"]},"metadata":{},"sourceType":"module"}