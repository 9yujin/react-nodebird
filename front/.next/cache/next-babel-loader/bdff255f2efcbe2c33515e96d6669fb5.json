{"ast":null,"code":"import { applyMiddleware, createStore, compose } from \"redux\";\nimport { createWrapper } from \"next-redux-wrapper\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport createSagaMiddleware from \"@redux-saga/core\";\nimport reducer from \"../reducers\";\n\nvar configureStore = function configureStore(context) {\n  var sagaMiddleware = createSagaMiddleware();\n  var middlewares = [sagaMiddleware, loggerMiddleware];\n  var enhancer = false //개발용인지 아닌지\n  ? compose(applyMiddleware.apply(void 0, middlewares)) //배포용일때\n  : composeWithDevTools( //개발용일때,, devtool을 넣음. 이런건 nextjs 쓸때만 하는건가??\n  applyMiddleware.apply(void 0, middlewares));\n  var store = createStore(reducer, enhancer); //스토어ㄹ 가와\n\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nvar wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"sources":["/Users/hangyujin/Desktop/JBBP/tutorial/getnodebird/front/store/configureStore.js"],"names":["applyMiddleware","createStore","compose","createWrapper","composeWithDevTools","createSagaMiddleware","reducer","configureStore","context","sagaMiddleware","middlewares","loggerMiddleware","enhancer","store","sagaTask","run","rootSaga","wrapper","debug"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,WAA1B,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,oBAAP,MAAiC,kBAAjC;AACA,OAAOC,OAAP,MAAoB,aAApB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,OAAD,EAAa;AAClC,MAAMC,cAAc,GAAGJ,oBAAoB,EAA3C;AACA,MAAMK,WAAW,GAAG,CAACD,cAAD,EAAiBE,gBAAjB,CAApB;AACA,MAAMC,QAAQ,GACZ,MAAsC;AAAtC,IACIV,OAAO,CAACF,eAAe,MAAf,SAAmBU,WAAnB,CAAD,CADX,CAC6C;AAD7C,IAEIN,mBAAmB,EACjB;AACAJ,EAAAA,eAAe,MAAf,SAAmBU,WAAnB,CAFiB,CAHzB;AAOA,MAAMG,KAAK,GAAGZ,WAAW,CAACK,OAAD,EAAUM,QAAV,CAAzB,CAVkC,CAUY;;AAC9CC,EAAAA,KAAK,CAACC,QAAN,GAAiBL,cAAc,CAACM,GAAf,CAAmBC,QAAnB,CAAjB;AACA,SAAOH,KAAP;AACD,CAbD;;AAeA,IAAMI,OAAO,GAAGd,aAAa,CAACI,cAAD,EAAiB;AAAEW,EAAAA,KAAK;AAAP,CAAjB,CAA7B;AAEA,eAAeD,OAAf","sourcesContent":["import { applyMiddleware, createStore, compose } from \"redux\";\nimport { createWrapper } from \"next-redux-wrapper\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport createSagaMiddleware from \"@redux-saga/core\";\nimport reducer from \"../reducers\";\n\nconst configureStore = (context) => {\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewares = [sagaMiddleware, loggerMiddleware];\n  const enhancer =\n    process.env.NODE_ENV === \"production\" //개발용인지 아닌지\n      ? compose(applyMiddleware(...middlewares)) //배포용일때\n      : composeWithDevTools(\n          //개발용일때,, devtool을 넣음. 이런건 nextjs 쓸때만 하는건가??\n          applyMiddleware(...middlewares)\n        );\n  const store = createStore(reducer, enhancer); //스토어ㄹ 가와\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nconst wrapper = createWrapper(configureStore, { debug: process.env.NODE_ENV === \"development\" });\n\nexport default wrapper;\n"]},"metadata":{},"sourceType":"module"}